# Nginx configuration for Docker container load balancing
# This is for LOCAL TESTING with docker-compose

events {
    worker_connections 1024;
}

http {
    # Upstream configuration for load balancing
    upstream riddlen_main {
        least_conn;  # Use least connections algorithm
        server riddlen-main:3000 max_fails=3 fail_timeout=30s;
        # Add more instances for scaling:
        # server riddlen-main-2:3000;
        # server riddlen-main-3:3000;
    }

    upstream riddlen_staging {
        least_conn;
        server riddlen-staging:3001 max_fails=3 fail_timeout=30s;
    }

    upstream riddlen_frames {
        least_conn;
        server riddlen-frames:3002 max_fails=3 fail_timeout=30s;
    }

    upstream riddlen_devlog {
        least_conn;
        server riddlen-devlog:3004 max_fails=3 fail_timeout=30s;
    }

    # Main site
    server {
        listen 80;
        server_name localhost riddlen.local;

        location / {
            proxy_pass http://riddlen_main;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Staging
    server {
        listen 80;
        server_name staging.riddlen.local;

        location / {
            proxy_pass http://riddlen_staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Frames
    server {
        listen 80;
        server_name frames.riddlen.local;

        location / {
            proxy_pass http://riddlen_frames;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Devlog
    server {
        listen 80;
        server_name devlog.riddlen.local;

        location / {
            proxy_pass http://riddlen_devlog;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
