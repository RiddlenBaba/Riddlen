# Nginx Upstream Load Balancing Configuration
# For PRODUCTION multi-server deployment
# Place in /etc/nginx/sites-available/ and symlink to sites-enabled

# Define upstream pools for each app
upstream riddlen_main_pool {
    least_conn;  # Load balancing algorithm

    # Multiple instances of main app
    server 10.0.1.10:3000 weight=1 max_fails=3 fail_timeout=30s;
    server 10.0.1.11:3000 weight=1 max_fails=3 fail_timeout=30s;
    server 10.0.1.12:3000 weight=1 max_fails=3 fail_timeout=30s;

    # Health check (nginx plus only, comment out for open-source)
    # health_check interval=5s fails=3 passes=2;
}

upstream riddlen_staging_pool {
    least_conn;
    server 10.0.2.10:3001 weight=1 max_fails=3 fail_timeout=30s;
}

upstream riddlen_frames_pool {
    least_conn;
    server 10.0.3.10:3002 weight=1 max_fails=3 fail_timeout=30s;
    server 10.0.3.11:3002 weight=1 max_fails=3 fail_timeout=30s;
}

upstream riddlen_devlog_pool {
    least_conn;
    server 10.0.4.10:3004 weight=1 max_fails=3 fail_timeout=30s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=main_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=50r/s;

# HTTP -> HTTPS redirect
server {
    listen 80;
    server_name riddlen.com www.riddlen.com app.riddlen.com staging.riddlen.com frames.riddlen.com devlog.riddlen.com;
    return 301 https://$server_name$request_uri;
}

# Main production - riddlen.com
server {
    listen 443 ssl http2;
    server_name riddlen.com www.riddlen.com app.riddlen.com;

    ssl_certificate /etc/letsencrypt/live/riddlen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/riddlen.com/privkey.pem;

    # Rate limiting
    limit_req zone=main_limit burst=20 nodelay;

    location / {
        proxy_pass http://riddlen_main_pool;
        proxy_http_version 1.1;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Standard headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Cache bypass
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint (optional)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Staging - staging.riddlen.com
server {
    listen 443 ssl http2;
    server_name staging.riddlen.com;

    ssl_certificate /etc/letsencrypt/live/staging.riddlen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.riddlen.com/privkey.pem;

    location / {
        proxy_pass http://riddlen_staging_pool;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
    }
}

# Frames - frames.riddlen.com
server {
    listen 443 ssl http2;
    server_name frames.riddlen.com;

    ssl_certificate /etc/letsencrypt/live/frames.riddlen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/frames.riddlen.com/privkey.pem;

    location / {
        proxy_pass http://riddlen_frames_pool;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
    }
}

# Devlog - devlog.riddlen.com
server {
    listen 443 ssl http2;
    server_name devlog.riddlen.com;

    ssl_certificate /etc/letsencrypt/live/devlog.riddlen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/devlog.riddlen.com/privkey.pem;

    location / {
        proxy_pass http://riddlen_devlog_pool;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
    }
}

# Configuration notes:
# 1. Replace 10.0.x.x IP addresses with your actual server IPs
# 2. Add/remove servers from upstream pools as needed
# 3. Adjust rate limiting based on your traffic patterns
# 4. For dynamic upstreaming, consider nginx-plus or use consul-template
# 5. Monitor with: tail -f /var/log/nginx/access.log | grep upstream
